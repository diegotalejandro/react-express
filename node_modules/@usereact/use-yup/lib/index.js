"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = require("react");
function useYup(values, validationSchema, options) {
    if (options === void 0) { options = {}; }
    var _a = react_1.useState({}), errors = _a[0], setErrors = _a[1];
    var isValid = Object.keys(errors).length === 0;
    var validate = function () {
        return validationSchema
            .validate(values, { abortEarly: false })
            .then(function () {
            return {};
        })
            .catch(function (error) {
            return yupToValidationErrors(error);
        })
            .then(function (newErrors) {
            setErrors(newErrors);
            return {
                errors: newErrors,
                isValid: Object.keys(newErrors).length === 0
            };
        });
    };
    react_1.useEffect(function () {
        options.validateOnChange && validate();
    }, [values, validationSchema]);
    return {
        validate: validate,
        errors: errors,
        isValid: isValid,
    };
}
/**
 * Transform Yup errors to a ValidationErrors object
 */
function yupToValidationErrors(yupError) {
    var errors = {};
    if (yupError.inner.length === 0) {
        updateIn(errors, yupError.path, yupError.message);
        return errors;
    }
    for (var _i = 0, _a = yupError.inner; _i < _a.length; _i++) {
        var err = _a[_i];
        updateIn(errors, err.path, err.message);
    }
    return errors;
}
function updateIn(obj, path, value) {
    var pathArray = path.split('.');
    var destinationObject = obj;
    for (var i = 0; i < pathArray.length - 1; i++) {
        if (pathArray[i] in destinationObject === false) {
            destinationObject[pathArray[i]] = {};
        }
        destinationObject = destinationObject[pathArray[i]];
    }
    destinationObject[pathArray[pathArray.length - 1]] = value;
}
exports.default = useYup;
