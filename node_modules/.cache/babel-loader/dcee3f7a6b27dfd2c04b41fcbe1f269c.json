{"ast":null,"code":"import _defineProperty from \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/src/components/student-list.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\"; //import useYup from \"@usereact/use-yup\";\n\n/*const validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n})*/\n\nexport default function StudentList() {\n  const _useState = useState({\n    data: [{\n      title: \"Name\",\n      field: \"name\"\n    }, {\n      title: \"E-mail\",\n      field: \"email\",\n      type: \"mail\"\n    }, {\n      title: \"Roll-Nº\",\n      field: \"rollno\",\n      type: \"numeric\"\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 1),\n        columns = _useState2[0];\n\n  const _useState3 = useState({\n    data: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        student = _useState4[0],\n        setStudent = _useState4[1];\n  /*const { errors, validate } = useYup(values, validationSchema, {\n    validateOnChange: true\n  })\n  console.log('errors: ', errors)*/\n\n\n  useEffect(() => {\n    axios.get(\"http://localhost:4000/students/\").then(res => {\n      setStudent(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(MaterialTable, Object.assign({\n    title: \"Table Example\",\n    columns: columns.data,\n    data: student.data\n  }, console.log(\"\"), {\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setStudent(prevState => {\n            const data = [...prevState.data];\n            axios.post(\"http://localhost:4000/students/create-student\", {\n              name: newData.name,\n              email: newData.email,\n              rollno: parseInt(newData.rollno)\n            }).then(res => {\n              console.log(res.data);\n            }).catch(error => {\n              console.log(error);\n            });\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setStudent(prevState => {\n              const data = [...prevState.data];\n              axios.put(\"http://localhost:4000/students/update-student/\" + oldData._id, {\n                name: newData.name,\n                email: newData.email,\n                rollno: parseInt(newData.rollno)\n              }).then(res => {\n                console.log(res.data);\n              }).catch(error => {\n                console.log(error);\n              });\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setStudent(prevState => {\n            const data = [...prevState.data];\n            axios.delete(\"http://localhost:4000/students/delete-student/\" + oldData._id).then(res => {\n              console.log(res.data);\n            }).catch(error => {\n              console.log(error);\n            });\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  })), React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/src/components/student-list.component.js"],"names":["React","useState","useEffect","axios","MaterialTable","StudentList","data","title","field","type","columns","student","setStudent","get","then","res","catch","error","console","log","onRowAdd","newData","Promise","resolve","setTimeout","prevState","post","name","email","rollno","parseInt","push","onRowUpdate","oldData","put","_id","indexOf","onRowDelete","delete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MaterialTable from \"material-table\";\n//import useYup from \"@usereact/use-yup\";\n\n/*const validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n})*/\n\nexport default function StudentList() {\n  const [columns] = useState({\n    data: [\n      { title: \"Name\", field: \"name\" },\n      { title: \"E-mail\", field: \"email\", type: \"mail\" },\n      { title: \"Roll-Nº\", field: \"rollno\", type: \"numeric\" }\n    ]\n  });\n\n  const [student, setStudent] = useState({\n    data: []\n  });\n\n  /*const { errors, validate } = useYup(values, validationSchema, {\n    validateOnChange: true\n  })\n  console.log('errors: ', errors)*/\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:4000/students/\")\n      .then(res => {\n        setStudent(res);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <MaterialTable\n        title=\"Table Example\"\n        columns={columns.data}\n        data={student.data}\n        {...console.log(\"\")}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                setStudent(prevState => {\n                  const data = [...prevState.data];\n                  axios\n                    .post(\"http://localhost:4000/students/create-student\", {\n                      name: newData.name,\n                      email: newData.email,\n                      rollno: parseInt(newData.rollno)\n                    })\n                    .then(res => {\n                      console.log(res.data);\n                    })\n                    .catch(error => {\n                      console.log(error);\n                    });\n                  data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setStudent(prevState => {\n                    const data = [...prevState.data];\n                    axios\n                      .put(\n                        \"http://localhost:4000/students/update-student/\" +\n                          oldData._id,\n                        {\n                          name: newData.name,\n                          email: newData.email,\n                          rollno: parseInt(newData.rollno)\n                        }\n                      )\n                      .then(res => {\n                        console.log(res.data);\n                      })\n                      .catch(error => {\n                        console.log(error);\n                      });\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                setStudent(prevState => {\n                  const data = [...prevState.data];\n                  axios\n                    .delete(\n                      \"http://localhost:4000/students/delete-student/\" +\n                        oldData._id\n                    )\n                    .then(res => {\n                      console.log(res.data);\n                    })\n                    .catch(error => {\n                      console.log(error);\n                    });\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            })\n        }}\n      />\n      <link\n        rel=\"stylesheet\"\n        href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n      ></link>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}