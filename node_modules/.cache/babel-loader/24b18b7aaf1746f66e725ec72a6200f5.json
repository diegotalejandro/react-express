{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nfunction useYup(values, validationSchema, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _a = react_1.useState({}),\n      errors = _a[0],\n      setErrors = _a[1];\n\n  var isValid = Object.keys(errors).length === 0;\n\n  var validate = function () {\n    return validationSchema.validate(values, {\n      abortEarly: false\n    }).then(function () {\n      return {};\n    }).catch(function (error) {\n      return yupToValidationErrors(error);\n    }).then(function (newErrors) {\n      setErrors(newErrors);\n      return {\n        errors: newErrors,\n        isValid: Object.keys(newErrors).length === 0\n      };\n    });\n  };\n\n  react_1.useEffect(function () {\n    options.validateOnChange && validate();\n  }, [values, validationSchema]);\n  return {\n    validate: validate,\n    errors: errors,\n    isValid: isValid\n  };\n}\n/**\n * Transform Yup errors to a ValidationErrors object\n */\n\n\nfunction yupToValidationErrors(yupError) {\n  var errors = {};\n\n  if (yupError.inner.length === 0) {\n    updateIn(errors, yupError.path, yupError.message);\n    return errors;\n  }\n\n  for (var _i = 0, _a = yupError.inner; _i < _a.length; _i++) {\n    var err = _a[_i];\n    updateIn(errors, err.path, err.message);\n  }\n\n  return errors;\n}\n\nfunction updateIn(obj, path, value) {\n  var pathArray = path.split('.');\n  var destinationObject = obj;\n\n  for (var i = 0; i < pathArray.length - 1; i++) {\n    if (pathArray[i] in destinationObject === false) {\n      destinationObject[pathArray[i]] = {};\n    }\n\n    destinationObject = destinationObject[pathArray[i]];\n  }\n\n  destinationObject[pathArray[pathArray.length - 1]] = value;\n}\n\nexports.default = useYup;","map":null,"metadata":{},"sourceType":"script"}