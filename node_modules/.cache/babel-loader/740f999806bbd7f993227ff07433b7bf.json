{"ast":null,"code":"import _defineProperty from \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/src/components/student-list.component.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport MaterialTable from 'material-table';\nimport useYup from '@usereact/use-yup';\n/*const validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n})*/\n\nexport default function StudentList() {\n  const _useState = useState({\n    data: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'E-mail',\n      field: 'email',\n      type: 'mail'\n    }, {\n      title: 'Roll-Nº',\n      field: 'rollno',\n      type: 'numeric'\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 1),\n        columns = _useState2[0];\n\n  const _useState3 = useState({\n    data: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        student = _useState4[0],\n        setStudent = _useState4[1];\n  /*const { errors, validate } = useYup(values, validationSchema, {\n    validateOnChange: true\n  })*/\n\n\n  console.log('errors: ', errors);\n  useEffect(() => {\n    axios.get('http://localhost:4000/students/').then(res => {\n      setStudent(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(MaterialTable, {\n    title: \"Table Example\",\n    columns: columns.data,\n    data: student.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setStudent(prevState => {\n            const data = [...prevState.data];\n            axios.post('http://localhost:4000/students/create-student', {\n              name: newData.name,\n              email: newData.email,\n              rollno: parseInt(newData.rollno)\n            }).then(res => {\n              console.log(res.data);\n            }).catch(error => {\n              console.log(error);\n            });\n            data.push(newData);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setStudent(prevState => {\n              const data = [...prevState.data];\n              axios.put('http://localhost:4000/students/update-student/' + oldData._id, {\n                name: newData.name,\n                email: newData.email,\n                rollno: parseInt(newData.rollno)\n              }).then(res => {\n                console.log(res.data);\n              }).catch(error => {\n                console.log(error);\n              });\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setStudent(prevState => {\n            const data = [...prevState.data];\n            axios.delete('http://localhost:4000/students/delete-student/' + oldData._id).then(res => {\n              console.log(res.data);\n            }).catch(error => {\n              console.log(error);\n            });\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/src/components/student-list.component.js"],"names":["React","useState","useEffect","axios","MaterialTable","useYup","StudentList","data","title","field","type","columns","student","setStudent","console","log","errors","get","then","res","catch","error","onRowAdd","newData","Promise","resolve","setTimeout","prevState","post","name","email","rollno","parseInt","push","onRowUpdate","oldData","put","_id","indexOf","onRowDelete","delete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport MaterialTable from 'material-table';\nimport useYup from '@usereact/use-yup'\n\n/*const validationSchema = yup.object().shape({\n  name: yup.string().required(),\n  email: yup.string().required(),\n})*/\n\nexport default function StudentList(){\n\n  const [columns] = useState({\n    data: [\n      { title: 'Name', field: 'name' },\n      { title: 'E-mail', field: 'email', type: 'mail'},\n      { title: 'Roll-Nº', field: 'rollno', type: 'numeric' }      \n    ]\n  });\n\n  const [student, setStudent] = useState({\n    data: []\n  });\n\n  /*const { errors, validate } = useYup(values, validationSchema, {\n    validateOnChange: true\n  })*/\n  console.log('errors: ', errors)\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/students/')\n      .then(res => {\n        setStudent(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, []);\n\n  return (\n    <div>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"></link>\n      <MaterialTable\n        title=\"Table Example\"\n        columns={columns.data}\n        data={student.data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                setStudent(prevState => {\n                  const data = [...prevState.data];\n                  axios.post('http://localhost:4000/students/create-student', { name: newData.name, email: newData.email, rollno: parseInt(newData.rollno)})\n                    .then(res => {\n                      console.log(res.data);                      \n                    })\n                    .catch((error) => {\n                      console.log(error);\n                    })\n                    data.push(newData);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setStudent(prevState => {\n                    const data = [...prevState.data];\n                    axios.put('http://localhost:4000/students/update-student/' + oldData._id, { name: newData.name, email: newData.email, rollno: parseInt(newData.rollno)})\n                      .then(res => {\n                        console.log(res.data);                        \n                      })\n                      .catch((error) => {\n                        console.log(error);\n                      })\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                setStudent(prevState => {\n                  const data = [...prevState.data];\n                  axios.delete('http://localhost:4000/students/delete-student/' + oldData._id)\n                    .then(res => {\n                      console.log(res.data);                      \n                    })\n                    .catch((error) => {\n                      console.log(error);\n                    })\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n        }}\n      />\n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}