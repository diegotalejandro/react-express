{"ast":null,"code":"import _objectSpread from \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/src/components/student-list.component.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport MaterialTable from 'material-table';\nimport StudentTableRow from './StudentTableRow';\nexport default function StudentList() {\n  const _useState = useState({\n    data: [{\n      title: 'Name',\n      field: 'name'\n    }, {\n      title: 'E-mail',\n      field: 'email'\n    }, {\n      title: 'Roll-Nº',\n      field: 'rollno',\n      type: 'numeric'\n    }]\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        columns = _useState2[0],\n        setColumns = _useState2[1];\n\n  const _useState3 = useState({\n    data: [{\n      name: '',\n      email: '',\n      rollno: ''\n    }]\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setData = _useState4[1];\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/students/').then(res => {\n      setData(res);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"link\", {\n    rel: \"stylesheet\",\n    href: \"https://fonts.googleapis.com/icon?family=Material+Icons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(MaterialTable, {\n    title: \"Editable Example\",\n    columns: columns.data,\n    data: data.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setData(prevState => {\n            const data = [...prevState.data]; //data.push(newData);\n\n            axios.post('http://localhost:4000/create-student', newData).then(res => {\n              console.log(res.data);\n            }).catch(error => {\n              console.log(error);\n            });\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setData(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return _objectSpread({}, prevState, {\n                data\n              });\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setData(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return _objectSpread({}, prevState, {\n              data\n            });\n          });\n        }, 600);\n      })\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/macbookretinadeeugenio/react/react-mernstack-crud-original/src/components/student-list.component.js"],"names":["React","useState","useEffect","axios","Table","MaterialTable","StudentTableRow","StudentList","data","title","field","type","columns","setColumns","name","email","rollno","setData","get","then","res","catch","error","console","log","onRowAdd","newData","Promise","resolve","setTimeout","prevState","post","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Table from 'react-bootstrap/Table';\nimport MaterialTable from 'material-table';\nimport StudentTableRow from './StudentTableRow';\n\n\nexport default function StudentList(){\n\n  const [columns, setColumns] = useState({\n    data: [\n      { title: 'Name', field: 'name' },\n      { title: 'E-mail', field: 'email' },\n      { title: 'Roll-Nº', field: 'rollno', type: 'numeric' }      \n    ]\n  });\n\n  const [data, setData] = useState({\n    data: [\n      { name: '', email: '', rollno: '' }      \n    ]}\n  );\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/students/')\n      .then(res => {\n        setData(res);\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }, []);\n\n  return (\n    <div>\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"></link>\n      <MaterialTable\n        title=\"Editable Example\"\n        columns={columns.data}\n        data={data.data}\n        editable={{\n          onRowAdd: newData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                setData(prevState => {\n                  const data = [...prevState.data];\n                  //data.push(newData);\n                  axios.post('http://localhost:4000/create-student', newData)\n                    .then(res => {\n                      console.log(res.data);\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                    })\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n          onRowUpdate: (newData, oldData) =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                if (oldData) {\n                  setData(prevState => {\n                    const data = [...prevState.data];\n                    data[data.indexOf(oldData)] = newData;\n                    return { ...prevState, data };\n                  });\n                }\n              }, 600);\n            }),\n          onRowDelete: oldData =>\n            new Promise(resolve => {\n              setTimeout(() => {\n                resolve();\n                setData(prevState => {\n                  const data = [...prevState.data];\n                  data.splice(data.indexOf(oldData), 1);\n                  return { ...prevState, data };\n                });\n              }, 600);\n            }),\n        }}\n      />\n      </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}